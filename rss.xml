<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
  <title>Obachuka</title>
  <link>http://obachuka.com</link>
  <description>Obachuka's personal website</description>
  <atom:link href="http://obachuka.com/rss.xml" rel="self" type="application/rss+xml" />
  <language>en</language>

  <item>
    <title>Explosion colors!</title>
    <link>http://obachuka.com/2016/07/19/</link>
    <description><![CDATA[<img src="http://i.imgur.com/sOwHwj4.gif"> <p>This was remarkably easy to implement, around ten lines of code. As mentioned, I story every object in the game as the same struct, with different behaviours determined by the position in an array. I origanally thought this would be extremely inflexible, but adding new features to the game so far has been incredibly easy.</p>]]></description>
    <guid>http://obachuka.com/2016/07/19/</guid>
  </item>

  <item>
    <title>Yellow and green</title>
    <link>http://obachuka.com/2016/07/17/</link>
    <description><![CDATA[<img src="http://i.imgur.com/Wbo3NCM.gif"> <p>Yellow and green dots! I'll have purple and orange next. I was watching EVO today, and had it playing in the background. And yet I was surprisingly productive. I should have some background noise playing more often, preferably some sport I'm not interested in.</p>]]></description>
    <guid>http://obachuka.com/2016/07/17/</guid>
  </item>

  <item>
    <title>Core gameplay complete</title>
    <link>http://obachuka.com/2016/07/16/</link>
    <description><![CDATA[<p>My basic gameplay is complete. The rest is adding more features and polish.</p> <img src="http://i.imgur.com/FD4fTp9.gif"> <p>While recording this, I noticed I had a bug with my replay/text. When a replay starts, the score disappears, and reappears when my score is updated. My entire game is stack allocated, so to save replays, I output all of the memory into a file, then read it back in again later. This wouldn't work for something dynamically allocated, as the memory will be in a different location on each replay. And guess what's the only thing that's dynamically allocated? That's right, the same font rendering I complained about yesterday. So when the replay starts, the memory for the score is invalid. Then when the score is updated, an entirely new texture is generated. I don't intend to fix this bug though, because once I switch to using images, I won't have this problem, since my images won't be dynamically updated in the middle of the game.</p>]]></description>
    <guid>http://obachuka.com/2016/07/16/</guid>
  </item>

  <item>
    <title>Rendering dumb C strings</title>
    <link>http://obachuka.com/2016/07/15/</link>
    <description><![CDATA[<p>One of the few things I actually like about high level languages is their string handling. Strings in C are mad annoying. I tried rendering a score to my game using SDL2_ttf, and tell it the font, string, position, width, and height of where to draw the text. But it doesn't display at a standard font size, e.g. 16pt font if I specify 16pt. Instead, the text is converted into a texture and stretched to fit the whole drawing area.</p> <img src="http://i.imgur.com/VPjI4V7.png"> <p>That's dumb. But this ain't a high level language. This is C. So to get around this, I just formatted the string to begin with a bunch of leading 0s.</p> <img src="http://i.imgur.com/D3vWa5n.png"> <p>But that looks ugly. And my font is still pixellated, most definitely because the texture is still being stretched. Honestly, if the font is going to be converted into a texture and look ugly doing it, I might as well create my own font using images. I try to avoid using strings anyways, even if I'm using Java or Python.</p>]]></description>
    <guid>http://obachuka.com/2016/07/15/</guid>
  </item>

  <item>
    <title>Red and blue</title>
    <link>http://obachuka.com/2016/07/14/</link>
    <description><![CDATA[<img src="http://i.imgur.com/kN11Vrt.png">]]></description>
    <guid>http://obachuka.com/2016/07/14/</guid>
  </item>

  <item>
    <title>Small time step gif</title>
    <link>http://obachuka.com/2016/07/13/</link>
    <description><![CDATA[<p>There's slow motion in my game, during which objects move, uh, slowly. But because the smallest unit anything can move is a pixel, the movement looks jerky. See figure A.</p> <img src="http://i.imgur.com/8Lwq24I.gif"> <p>One way to get around this is with anti-aliasing. To denote half a black pixel, that pixel would be gray. Unfortunately, I won't be fixing this. I'm using SDL2 for my game, even for drawing, and SDL2 doesn't allow you to modify textures. To do something like this, I'd have to make direct OpenGL calls, which I won't have time to do if I want to finish this game by the end of the month. I still need more dots, game over screen, sound, and high score. Once I get that done, I can maybe work on smoothing out slow movements, but honestly there's probably better stuff for me to work on.</p>]]></description>
    <guid>http://obachuka.com/2016/07/13/</guid>
  </item>

  <item>
    <title>Missed my alarm</title>
    <link>http://obachuka.com/2016/07/12/</link>
    <description><![CDATA[<p>Technology is unreliable. My phone ran out of batteries, so it failed to wake me up at 6am this morning. Really, humans are unreliable. I should have remembered to turn it back on. So I didn't get anything done in the morning. I tried to make up for it after work, but all I ended up doing was making an "improvement" to my collision detection that didn't even compile (and never will), and made janky slow-mo.</p> <p>Because I'd been waking up at 6am for the past two weeks, I actually did wake up in time. But I just didn't get out of bed because I didn't hear my alarm.  I need to sleep with a clock next to my bed.</p>]]></description>
    <guid>http://obachuka.com/2016/07/12/</guid>
  </item>

</channel>
</rss>

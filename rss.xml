<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
  <title>Obachuka</title>
  <link>http://obachuka.com</link>
  <description>Obachuka's personal website</description>
  <atom:link href="http://obachuka.com/rss.xml" rel="self" type="application/rss+xml" />
  <language>en</language>

  <item>
    <title>Red and blue</title>
    <link>http://obachuka.com/2016/07/14/</link>
    <description><![CDATA[<img src="http://i.imgur.com/kN11Vrt.png">]]></description>
    <guid>http://obachuka.com/2016/07/14/</guid>
  </item>

  <item>
    <title>Small time step gif</title>
    <link>http://obachuka.com/2016/07/13/</link>
    <description><![CDATA[<p>There's slow motion in my game, during which objects move, uh, slowly. But because the smallest unit anything can move is a pixel, the movement looks jerky. See figure A.</p> <img src="http://i.imgur.com/8Lwq24I.gif"> <p>One way to get around this is with anti-aliasing. To denote half a black pixel, that pixel would be gray. Unfortunately, I won't be fixing this. I'm using SDL2 for my game, even for drawing, and SDL2 doesn't allow you to modify textures. To do something like this, I'd have to make direct OpenGL calls, which I won't have time to do if I want to finish this game by the end of the month. I still need more dots, game over screen, sound, and high score. Once I get that done, I can maybe work on smoothing out slow movements, but honestly there's probably better stuff for me to work on.</p>]]></description>
    <guid>http://obachuka.com/2016/07/13/</guid>
  </item>

  <item>
    <title>Missed my alarm</title>
    <link>http://obachuka.com/2016/07/12/</link>
    <description><![CDATA[<p>Technology is unreliable. My phone ran out of batteries, so it failed to wake me up at 6am this morning. Really, humans are unreliable. I should have remembered to turn it back on. So I didn't get anything done in the morning. I tried to make up for it after work, but all I ended up doing was making an "improvement" to my collision detection that didn't even compile (and never will), and made janky slow-mo.</p> <p>Because I'd been waking up at 6am for the past two weeks, I actually did wake up in time. But I just didn't get out of bed because I didn't hear my alarm.  I need to sleep with a clock next to my bed.</p>]]></description>
    <guid>http://obachuka.com/2016/07/12/</guid>
  </item>

  <item>
    <title>Practice for real</title>
    <link>http://obachuka.com/2016/07/11/</link>
    <description><![CDATA[<p>Yesterday I was so proud of my explosions. Turns out there was a massive bug, and collisions didn't always happen properly for larger dots. I was still drawing them as squares when they should have been circles, so I assumed that the collision mistakes were just because the square image didn't match up with the real circle hitbox, and that once I switched to circles, it would be correct.</p> <p>Turns out no. My collisions were just wrong, and I didn't notice until I switched to circles (squares are easier to draw). Collisions are fixed now though, but I guess you should always practice with the real thing, otherwise you might not know you're doing it wrong until too late.</p> <img src="http://i.imgur.com/SZlcOks.png"/>
]]></description>
    <guid>http://obachuka.com/2016/07/11/</guid>
  </item>

  <item>
    <title>Explosions!</title>
    <link>http://obachuka.com/2016/07/10/</link>
    <description><![CDATA[<p>I have explosions in my game now. Next I need to make my dots actual circles instead of squares. Then a game over state, more dots, sound, and high scores. That seems pretty doable within two weeks. I got most of the hard parts out of the way, I know how to do the rest quite easily.</p> <video controls autoplay><source src="https://zippy.gfycat.com/WhichKnobbyAttwatersprairiechicken.webm" type="video/webm"></video> <p>Apparently my videos haven't been showing up on a lot of people's devices. I'll switch to gifs next time, after I figure it out.</p>]]></description>
    <guid>http://obachuka.com/2016/07/10/</guid>
  </item>

  <item>
    <title>Back to the quadtree</title>
    <link>http://obachuka.com/2016/07/09/</link>
    <description><![CDATA[<p>Yesterday I tried to do spatial partitioning with a grid instead of a recursive data structure like a quadtree. I forgot that an entity can be in multiple grid cells, such as when they're crossing over from one to the next. In those cases, I would need to get the bigger cell that encompasses each indvidual cell, like a parent cell of sorts. So a quadtree. Granted, the quadtree I made was stack allocated and didn't dynamically subdivide, so it's not a true quadtree, but it's similar. I redid my grid from yesterday, and in doing so, also fixed the bug from yesterday. I have basic collision working with the player now, but there isn't really anything to show, since nothing happens yet when they collide.</p> <p>Kind of off topic, but I ran into an undefined bug today while writing my quadtree, the ones that take forever to find but ends up being a really simple fix. Stuff like that were reasons why I wanted to try out Rust. Languages I've used for game development went from ActionScript -> Python -> ActionScript -> Java -> C# -> C++ -> Rust -> C. Since I end up interfacing with a lot of C APIs like OpenGL and SDL2, Rust became annoying to use, moreso than its strict compiler. The community has C bindings already written, but I found them cumbersome. I considered using C to wrap the C library calls and do the rest in Rust, but that probably would have been more effort than it's worth. I might try Rust again in the future, but for now I'm sticking to C. I like how simple C is. I can usually solve bugs by just trying to think like a computer, whereas languages like Python make me wonder if I'm using a library wrong or perhaps even an inherent flaw in the language. Trying to understand how other people implemented something is a lot harder than understanding how the computer implements something.</p>]]></description> <guid>http://obachuka.com/2016/07/09/</guid>
  </item>

</channel>
</rss>

<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
  <title>Obachuka</title>
  <link>http://obachuka.com</link>
  <description>Obachuka's personal website</description>
  <atom:link href="http://obachuka.com/rss.xml" rel="self" type="application/rss+xml" />
  <language>en</language>

  <item>
    <title>Wolf and Ghost</title>
    <link>http://obachuka.com/2018/04/25/</link>
    <description><![CDATA[<p>Our game is a cross between Pikmin and Pac-Man for Ludum Dare 41. While I think the Pikmin influence is clear enough (moving a ton of sheep), I wanted to talk more about the Pac-Man influences. The ghosts in Pac-Man follow a few simple rules for seemingly complex behavior, which I tried to replicate with the wolves in Shepherd and Sheep. Some things worked well when I combined it with the real-time strategy genre, and other things not as much.</p><p>After 20 seconds, wolves will stop whatever doing and retreat for 5 seconds before resuming their attack.</p><img src="https://img.itch.zone/aW1nLzExOTgxNzguZ2lm/original/QMIcYO.gif"><br><br><p>This was in the original Pac-Man too. Being constantly chased is stressful, so the 5 seconds of safety is to let the player breathe. I chose 20 seconds because that's what Pac-Man used in the first level, but now I think 20 seconds is too long for such a fast-paced game. Shorter but more frequent breaks probably would have felt better.</p><p>There are 7 wolf patrols in the game. Every wolf, when it has line of sight to a lone sheep, will stop its patrol and give chase in a straight line. Fences, rocks, the shepherd, the dog, and sheep in a group will block line of sight. If a wolf doesn't have a line of sight, it will resume its patrol.</p><p><img src="https://img.itch.zone/aW1nLzExOTgxNzkuZ2lm/original/D%2Bor1t.gif"><br></p><p>The first wolf, which I refer to as the alpha wolf, will just chase down a sheep, and is based off of "Blinky" the red ghost.</p><p><img src="https://img.itch.zone/aW1nLzExOTgxODAuZ2lm/original/zKEqDb.gif"><br></p><p>The alpha wolf ended up being far too aggressive, and will break up the flock of sheep too easily, so the alpha wolf isn't present in most levels.</p><p>The second wolf is based on "Pinky" the, uh... pink ghost. This wolf will move in the direction a sheep is moving towards.</p><p><img src="https://img.itch.zone/aW1nLzExOTgxODEuZ2lm/original/zeLBqT.gif"><br></p><p>Note that I use velocity to determine the direction a sheep is moving, so when the sheep stopped moving (velocity=0) the wolf started moving in. This is actually a problem because most levels are easier if you move your sheep slowly, but this caused this wolf to get too close. I used this wolf more than the alpha wolf, but still not as much. Because Pac-Man used tiles and not velocity, Pinky didn't have the same problem.</p><p>The third wolf is based on "Inky" the cyan ghost. Just like Inky, this wolf is a little more complex than the previous wolves, but basically it moves to the opposite side of the alpha wolf, such that the sheep is between it and the alpha wolf. In the following gif, the alpha wolf is on the left side. On the other side is the Inky wolf.</p><p><img src="https://img.itch.zone/aW1nLzExOTgxODIuZ2lm/original/hiW9Uu.gif"><br></p><p>Because I don't use the alpha wolf much, this wolf didn't see much use. However, I made two equivalent wolves that move to the opposite side of the shepherd and the dog using the same approach. I used these two quite a lot.</p><p><img src="https://img.itch.zone/aW1nLzExOTgxODMuZ2lm/original/dy%2FEs5.gif"><br></p><p><img src="https://img.itch.zone/aW1nLzExOTgxODguZ2lm/original/hj9YqZ.gif"><br></p><p>I think these wolves were the most fun to navigate around, as they aren't too aggressive but still close by.</p><p>The sixth wolf just circles around the sheep. It's not explicitly based off any ghost, but this and the next wolf are similar to the final ghost I'll describe later.</p><p><img src="https://img.itch.zone/aW1nLzExOTgxODcuZ2lm/original/czrvdd.gif"><br></p><p>Like the previous two wolves, this wolf wasn't too aggressive and was used a lot. Note that this wolf kind of spazzes out when he gets close to the four corners of the circle. This is because the up/down and left/right velocities are the same at these points, which is how I chose which direction sprite to use. I'm sure other programmers have felt this pain.</p><p>The last wolf just guards a point. After moving from its spot, it will move back.</p><p><img src="https://img.itch.zone/aW1nLzExOTgxODUuZ2lm/original/5ayx6U.gif"><br></p><p>This was my most used wolf, as it could be put in choke points and other spots without always following the player. &nbsp;<br>The final ghost, "Clyde" the yellow ghost will follow Pac-Man, but once he gets too close, he'll return to his designated spot. Because of how the ghosts behave in Pac-Man, once he arrives, he doesn't stop, but instead will start circling is spot until Pac-Man moves further away. In this regard, Clyde inspired my last two wolves.</p><p>There is no pathing whatsoever in this game, but by combining these behaviors, it looks like the wolves are trying to surround you!</p><p><img src="https://img.itch.zone/aW1nLzExOTgxODQuZ2lm/original/Hlxxvd.gif"><br></p><p>If you want to read more about the rules of Pac-Man, <a href="http://gameinternals.com/post/2072558330/understanding-pac-man-ghost-behavior" target="_blank">this is a great article</a>.</p><p>And of course, play and rate our game! Thanks!</p><p><a href="https://ldjam.com/events/ludum-dare/41/shepherd-and-dog">https://ldjam.com/events/ludum-dare/41/shepherd-and-dog</a></p>]]></description>
    <link>http://obachuka.com/2018/04/25/</link>
  </item>

  <item>
    <title>Fat Dot release</title>
    <link>http://obachuka.com/2018/03/22/</link>
    <description><![CDATA[<aside>Originally published on March 22, 2018 for the release of <a href="https://obachuka.itch.io/fat-dot">Fat Dot</a>.</aside><p>This is the first game I've ever released on an official store (itch, Play Store, App Store), and I plan on many more to follow!</p><p>I made the very first prototype of this game in high school, around 2011, meaning this tiny little game took 7 years to release. Of that time, I only spent 3-4 real months designing and making the game. The first prototype that was fun appeared in college, but it was written with PyGame, and I had trouble distributing it to people without Python installed. In the time since, I worked on many game ideas, but never released any. It wasn't until early 2018 that I finally decided to just take a game I've already designed and actually release it. Just so I can finally say I've finished something.</p>
    <p>And I plan on keeping on with that strategy. Here's to a year of actual releases.</p>]]></description>
    <link>http://obachuka.com/2018/03/22/</link>
  </item>

  <item>
    <title>Fat Dot Thanksgiving update</title>
    <link>http://obachuka.com/2016/11/24/</link>
    <description><![CDATA[<p>Happy Thanksgiving! This year, I'm thankful for being the most awesome guy I know. To celebrate my inflated ego, I gave Fat Dot an update.</p><p>This is a gameplay change this time. The way you play the game is still the same, but I made shrinking easier to understand, as in you now shrink automatically. The boundary's behavior was changed to end and score your combo. This change came about because I didn't like how the clicking behavior changed when an existing combo was already in progress. Plus, some players wouldn't regularly shrink themselves. The game is a bit easier now that the shrinking is automatic, but you still have to decide whether or not you want to continue your combo. A side effect of this update means that you can now extend your combos further by starting another explosion. I think there's more strategy this way.</p><p>That said, it's hard to know the actual outcome of this update, because I haven't really play tested it. And since I don't have any sort of testing (who needs that?), it's hard to tell if I introduced any bugs. It's been a while since my last update here, and coming back to my code after a few months, I noticed there were side effects everywhere. Any small change could result in a bug. I started out my code with the intention of violating several best practices, and it was fun to code differently from when I code for work.</p><p>So if you find any bugs, let me know. Love y'all.</p>]]></description>
    <guid>http://obachuka.com/2016/11/24/</guid>
  </item>

  <item>
    <title>Converting height to normal maps</title>
    <link>http://obachuka.com/2016/08/27/</link>
    <description><![CDATA[<p>For my next game, I want to experiment with my own 2D rendering. I'll need normal maps for what I'm planning, so I wrote my own small little converter to transform height maps to normal maps. I know programs already exist that can do this for you, but I wanted to try my own hand at it. I stole the following height map of a volcano from the internet somewhere.</p> <img src="http://www.pontov.com.br/site/images/stories/artigos/Criando-terrenos_124C4/volcano.png"/> <p>Here is the result:</p> <img src="http://i.imgur.com/NKLfPFF.png"/> <p>Red is the x axis, with full red pointing to the right, and green is the y axis, with full green pointing up. All vectors are normalized, with blue pointing outwards to the viewer. Looking at other people's normal maps, these look correct, but I won't actually know until I use them to render.</p>]]></description>
    <guid>http://obachuka.com/2016/08/27/</guid>
  </item>

  <item>
    <title>Flat figures in perspective</title>
    <link>http://obachuka.com/2016/08/21/</link>
    <description><![CDATA[<p>Just following along with Loomis.</p> <img src="https://lh3.googleusercontent.com/samkXsdB1i1GQ3967gL1gh8PJrqO0ToqsFPUCcZqfmFccqfhUKxkkgXSyzAwau6V4iVZi31c5RoCcb81P4rvrk2jZLZmWTm-3pHM88PRW66C-8MBdfY7xX-OZ9uA0dz4W-n2me6eqXoVMFW89jj-VhiCVaHmO6iN9QGIMmnJAd2LyovJjedEivmxhyXwFLZA-MQXipFCh6dsKyRyBgYLi7Wbhu7iT-s0hOi6NMn1echjegxQuF8vV6_9AFa3qP6h0uxQHSvHEt0VQCbx1ldt-KC5N06qb_Im9BPZwJN8FY9m0RHEC1EYbGLBi1aQcf3RQwJUQ9CLl9z7h4mnJmfvx4DLbO9jq9QvMFUWSKGAM1P-zEZsR79s3txZQjHNOv67VlmFAmPqGThXTO5vgF1RywB3zJd9fP_frT0DI-XJH4xr8DHmVjvVEfbtKBZ-oDZX3MtOMuOaJqIOpci-jPYkIiTWwLa1QNl0u7CNZBGbOcTVRsutkHGAkDw1warWTqI-g4x4K1v4pCj3Dh9RyBIprcTnv5Q_jbFiAAqYh_2OQW8pR-Kzr9aG5BrBO128lwoq33q9PNu6ZBCReUCBng2jD5NbHMByqyc=w1805-h1350-no">]]></description>
    <guid>http://obachuka.com/2016/08/21/</guid>
  </item>

  <item>
    <title>Heights of children</title>
    <link>http://obachuka.com/2016/08/18/</link>
    <description><![CDATA[<p>Tried figure outlines at different heights, this time using proportions of men at different ages.</p>
    <img src="https://lh3.googleusercontent.com/TtWCnGOH0q3BiL8hHCh2PG3j3Y-rzHhYBk-OTvGvbjMRkjQVnuCCStwLRttWMvRrLSI7BWG6ciGvMcIVxYOMvWxfEuhJVaQDadpN791DS_JJrvF3D9X6g0IEnk1i9A30qS6eJVUahdBLuUVI8_aLaQysEy6S7GXItNvsGAepqZdDwhjQnP_VopgDwnM3SY6x3hx9Vycm3p0h9fsWiZ3uhzRioxG-Yk1rux7VLCjzsa8rS2m3C8FIjdVMC_CXBZlcMgRQtJildkVZdKavhZsKmOVQJojuWPiSVjL9bGVr-ulOpP8zCnWjuJ6F_-1CFHFo4HOwaHUNqDQ5Su20VXubq0cZ4oPnzJRXUMBPmFACf9WW4HyCRej6_o9R4brGAmpAHqeNR6n2EpM48KgHOD2dHUOebOOlkRRyTSMzRt6PUc5HUvD4CP6IfiwbaLWMOmLkPeiFvFUlcR9JshLnqHDTtW2j3Gw7e6zbr3G5kqSss0PwYvEG4W4wOCwtOtPBHzFDPY1sh2HWwbyrzGJ9v5BVAqBSgsXxMzC_YuMtb0uuhzRSGTRTs0h7eTqcn8eq9lhkE1wE_3eQkm9vCN2wn-L9vMhvl4p8ao8=w1805-h1350-no">]]></description>
    <guid>http://obachuka.com/2016/08/18/</guid>
  </item>

</channel>
</rss>
